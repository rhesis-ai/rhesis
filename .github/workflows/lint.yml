name: Lint Check

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for paths-filter

    - name: Check for file changes
      uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          frontend:
            - 'apps/frontend/**'
          sdk:
            - 'sdk/**'
          backend:
            - 'apps/backend/**'

    # SDK Linting
    - name: Set up Python for SDK
      if: steps.filter.outputs.sdk == 'true' || steps.filter.outputs.backend == 'true' || github.event_name == 'workflow_dispatch'
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install uv for SDK
      if: steps.filter.outputs.sdk == 'true' || steps.filter.outputs.backend == 'true' || github.event_name == 'workflow_dispatch'
      uses: astral-sh/setup-uv@v6
      with:
        version: latest
        enable-cache: true

    - name: Check SDK uv.lock file
      if: steps.filter.outputs.sdk == 'true' ||  github.event_name == 'workflow_dispatch'
      run: |
        cd sdk
        uv lock --check --verbose

    - name: Run SDK linting
      if: steps.filter.outputs.sdk == 'true' || github.event_name == 'workflow_dispatch'
      run: |
        cd sdk
        make lint
      continue-on-error: false

    - name: Check Backend uv.lock file
      if: steps.filter.outputs.backend == 'true' || github.event_name == 'workflow_dispatch'
      run: |
        cd apps/backend
        uv lock --check --verbose

    - name: Run Backend linting
      if: steps.filter.outputs.backend == 'true' || github.event_name == 'workflow_dispatch'
      run: |
        cd apps/backend
        make lint
      continue-on-error: false

    # Frontend Linting
    - name: Set up Node.js for Frontend
      if: steps.filter.outputs.frontend == 'true' || github.event_name == 'workflow_dispatch'
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/frontend/package-lock.json

    - name: Install frontend dependencies
      if: steps.filter.outputs.frontend == 'true' || github.event_name == 'workflow_dispatch'
      run: |
        cd apps/frontend
        npm ci --legacy-peer-deps

    - name: Run frontend validation (format, lint, type-check, build)
      if: steps.filter.outputs.frontend == 'true' || github.event_name == 'workflow_dispatch'
      run: |
        cd apps/frontend
        ./scripts/validate.sh
      continue-on-error: false
      env:
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET || 'dummy-secret-for-ci-build' }}
        NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL || 'http://localhost:3000' }}
        NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL || 'http://localhost:8080' }}
        NEXT_PUBLIC_API_BASE_URL: ${{ secrets.NEXT_PUBLIC_API_BASE_URL || 'http://localhost:8080' }}
        BACKEND_URL: ${{ secrets.BACKEND_URL || 'http://localhost:8080' }}
        FRONTEND_ENV: 'production'
        APP_VERSION: '0.2.4'
        NEXT_PUBLIC_AUTH0_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_AUTH0_CLIENT_ID || 'dummy-client-id' }}
        NEXT_PUBLIC_AUTH0_DOMAIN: ${{ secrets.NEXT_PUBLIC_AUTH0_DOMAIN || 'dummy-domain.auth0.com' }}

    # Summary
    - name: Lint Summary
      if: always()
      run: |
        {
          echo "## Lint Check Results ✅"
          echo ""
          echo "- **Branch**: ${{ github.ref_name }}"
          echo ""
          echo "### What was checked:"
        } >> "$GITHUB_STEP_SUMMARY"
        
        if [ "${{ steps.filter.outputs.sdk }}" == "true" ] || [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "- **SDK**: Code formatting and linting with ruff ✅" >> "$GITHUB_STEP_SUMMARY"
        else
          echo "- **SDK**: Skipped (no changes detected)" >> "$GITHUB_STEP_SUMMARY"
        fi
        
        # if [ "${{ steps.filter.outputs.backend }}" == "true" ] || [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
        #   echo "- **Backend**: Code formatting and linting with ruff ✅" >> "$GITHUB_STEP_SUMMARY"
        # else
        #   echo "- **Backend**: Skipped (no changes detected)" >> "$GITHUB_STEP_SUMMARY"
        # fi
        
        if [ "${{ steps.filter.outputs.frontend }}" == "true" ] || [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "- **Frontend**: ESLint, Prettier formatting, TypeScript type checking, and build validation ✅" >> "$GITHUB_STEP_SUMMARY"
        else
          echo "- **Frontend**: Skipped (no changes detected)" >> "$GITHUB_STEP_SUMMARY"
        fi
