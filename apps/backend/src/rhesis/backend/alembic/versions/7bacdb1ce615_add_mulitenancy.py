from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

import rhesis.backend

# revision identifiers, used by Alembic.
revision: str = "7bacdb1ce615"
down_revision: Union[str, None] = "952b739375ec"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "behavior", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.add_column("behavior", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True))
    op.create_foreign_key(None, "behavior", "user", ["user_id"], ["id"])
    op.create_foreign_key(None, "behavior", "organization", ["organization_id"], ["id"])
    op.add_column(
        "category", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.add_column("category", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True))
    op.create_foreign_key(None, "category", "user", ["user_id"], ["id"])
    op.create_foreign_key(None, "category", "organization", ["organization_id"], ["id"])
    op.add_column(
        "demographic", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.add_column("demographic", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True))
    op.create_foreign_key(None, "demographic", "user", ["user_id"], ["id"])
    op.create_foreign_key(None, "demographic", "organization", ["organization_id"], ["id"])
    op.add_column(
        "dimension", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.add_column("dimension", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True))
    op.create_foreign_key(None, "dimension", "organization", ["organization_id"], ["id"])
    op.create_foreign_key(None, "dimension", "user", ["user_id"], ["id"])
    op.add_column(
        "prompt", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.create_foreign_key(None, "prompt", "organization", ["organization_id"], ["id"])
    op.add_column(
        "prompt_template",
        sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True),
    )
    op.create_foreign_key(None, "prompt_template", "organization", ["organization_id"], ["id"])
    op.add_column(
        "response_pattern",
        sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True),
    )
    op.add_column(
        "response_pattern", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.create_foreign_key(None, "response_pattern", "organization", ["organization_id"], ["id"])
    op.create_foreign_key(None, "response_pattern", "user", ["user_id"], ["id"])
    op.add_column(
        "risk", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.add_column("risk", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True))
    op.create_foreign_key(None, "risk", "user", ["user_id"], ["id"])
    op.create_foreign_key(None, "risk", "organization", ["organization_id"], ["id"])
    op.add_column(
        "source", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.add_column("source", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True))
    op.create_foreign_key(None, "source", "organization", ["organization_id"], ["id"])
    op.create_foreign_key(None, "source", "user", ["user_id"], ["id"])
    op.add_column(
        "status", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.add_column("status", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True))
    op.create_foreign_key(None, "status", "organization", ["organization_id"], ["id"])
    op.create_foreign_key(None, "status", "user", ["user_id"], ["id"])
    op.add_column(
        "subscription", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.create_foreign_key(None, "subscription", "organization", ["organization_id"], ["id"])
    op.add_column("tag", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True))
    op.create_foreign_key(None, "tag", "organization", ["organization_id"], ["id"])
    op.add_column(
        "test", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.create_foreign_key(None, "test", "organization", ["organization_id"], ["id"])
    op.add_column(
        "test_configuration",
        sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True),
    )
    op.create_foreign_key(None, "test_configuration", "organization", ["organization_id"], ["id"])
    op.add_column(
        "test_context", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.add_column(
        "test_context", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.create_foreign_key(None, "test_context", "organization", ["organization_id"], ["id"])
    op.create_foreign_key(None, "test_context", "user", ["user_id"], ["id"])
    op.add_column(
        "test_result", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.create_foreign_key(None, "test_result", "organization", ["organization_id"], ["id"])
    op.add_column(
        "test_run", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.create_foreign_key(None, "test_run", "organization", ["organization_id"], ["id"])
    op.add_column("token", sa.Column("name", sa.String(), nullable=True))
    op.add_column(
        "token", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.create_foreign_key(None, "token", "organization", ["organization_id"], ["id"])
    op.add_column(
        "topic", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.add_column("topic", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True))
    op.create_foreign_key(None, "topic", "organization", ["organization_id"], ["id"])
    op.create_foreign_key(None, "topic", "user", ["user_id"], ["id"])
    op.add_column(
        "type_lookup", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.add_column("type_lookup", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True))
    op.create_foreign_key(None, "type_lookup", "user", ["user_id"], ["id"])
    op.create_foreign_key(None, "type_lookup", "organization", ["organization_id"], ["id"])
    op.add_column(
        "use_case", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.add_column("use_case", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True))
    op.create_foreign_key(None, "use_case", "organization", ["organization_id"], ["id"])
    op.create_foreign_key(None, "use_case", "user", ["user_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "use_case", type_="foreignkey")
    op.drop_constraint(None, "use_case", type_="foreignkey")
    op.drop_column("use_case", "user_id")
    op.drop_column("use_case", "organization_id")
    op.drop_constraint(None, "type_lookup", type_="foreignkey")
    op.drop_constraint(None, "type_lookup", type_="foreignkey")
    op.drop_column("type_lookup", "user_id")
    op.drop_column("type_lookup", "organization_id")
    op.drop_constraint(None, "topic", type_="foreignkey")
    op.drop_constraint(None, "topic", type_="foreignkey")
    op.drop_column("topic", "user_id")
    op.drop_column("topic", "organization_id")
    op.drop_constraint(None, "token", type_="foreignkey")
    op.drop_column("token", "organization_id")
    op.drop_column("token", "name")
    op.drop_constraint(None, "test_run", type_="foreignkey")
    op.drop_column("test_run", "organization_id")
    op.drop_constraint(None, "test_result", type_="foreignkey")
    op.drop_column("test_result", "organization_id")
    op.drop_constraint(None, "test_context", type_="foreignkey")
    op.drop_constraint(None, "test_context", type_="foreignkey")
    op.drop_column("test_context", "user_id")
    op.drop_column("test_context", "organization_id")
    op.drop_constraint(None, "test_configuration", type_="foreignkey")
    op.drop_column("test_configuration", "organization_id")
    op.drop_constraint(None, "test", type_="foreignkey")
    op.drop_column("test", "organization_id")
    op.drop_constraint(None, "tag", type_="foreignkey")
    op.drop_column("tag", "organization_id")
    op.drop_constraint(None, "subscription", type_="foreignkey")
    op.drop_column("subscription", "organization_id")
    op.drop_constraint(None, "status", type_="foreignkey")
    op.drop_constraint(None, "status", type_="foreignkey")
    op.drop_column("status", "user_id")
    op.drop_column("status", "organization_id")
    op.drop_constraint(None, "source", type_="foreignkey")
    op.drop_constraint(None, "source", type_="foreignkey")
    op.drop_column("source", "user_id")
    op.drop_column("source", "organization_id")
    op.drop_constraint(None, "risk", type_="foreignkey")
    op.drop_constraint(None, "risk", type_="foreignkey")
    op.drop_column("risk", "user_id")
    op.drop_column("risk", "organization_id")
    op.drop_constraint(None, "response_pattern", type_="foreignkey")
    op.drop_constraint(None, "response_pattern", type_="foreignkey")
    op.drop_column("response_pattern", "user_id")
    op.drop_column("response_pattern", "organization_id")
    op.drop_constraint(None, "prompt_template", type_="foreignkey")
    op.drop_column("prompt_template", "organization_id")
    op.drop_constraint(None, "prompt", type_="foreignkey")
    op.drop_column("prompt", "organization_id")
    op.drop_constraint(None, "dimension", type_="foreignkey")
    op.drop_constraint(None, "dimension", type_="foreignkey")
    op.drop_column("dimension", "user_id")
    op.drop_column("dimension", "organization_id")
    op.drop_constraint(None, "demographic", type_="foreignkey")
    op.drop_constraint(None, "demographic", type_="foreignkey")
    op.drop_column("demographic", "user_id")
    op.drop_column("demographic", "organization_id")
    op.drop_constraint(None, "category", type_="foreignkey")
    op.drop_constraint(None, "category", type_="foreignkey")
    op.drop_column("category", "user_id")
    op.drop_column("category", "organization_id")
    op.drop_constraint(None, "behavior", type_="foreignkey")
    op.drop_constraint(None, "behavior", type_="foreignkey")
    op.drop_column("behavior", "user_id")
    op.drop_column("behavior", "organization_id")
    # ### end Alembic commands ###
