# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
**/*.DS_Store

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
coverage/
*.lcov
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal
test.db

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid
celery_worker.log
# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/


# Report JSON
#  This ignores the json report file being created
tests/report.json
.report.json

#  This ignores the json report file being created
tests/airtable.toml

#  RHESIS cli
.rhesis_cli_history

# Knowledge Base
kb/*

# Results
results/*

# knex.json
*knex.json

# TODOs.txt file
TODOs.txt

# Backup files
*.backup

# Node.js dependencies
node_modules
**/node_modules
**/node_modules/**

# Next.js
**/.next/**
**/out/**
**/build/**
**/dist/**

# Documentation specific
apps/documentation/.next/
apps/documentation/out/
apps/documentation/build/
apps/documentation/dist/
apps/documentation/public/_pagefind/
apps/documentation/.DS_Store
apps/documentation/node_modules/
apps/documentation/.env.local
apps/documentation/.env.development.local
apps/documentation/.env.test.local
apps/documentation/.env.production.local
apps/documentation/.swc/
apps/documentation/coverage/
apps/documentation/.nyc_output/

# Debug logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# Local env files
**/.env*.local
**/.env.development
**/.env.test
**/.env.production
**/.env.*
!**/.env.example
**/.env-*
**/env.*
!**/env.example

# Docker files

# Vercel
.vercel

# Terraform
infrastructure/scripts/*-setup-secrets.sh
!infrastructure/scripts/setup-github-secrets.sh
!infrastructure/scripts/template-setup-secrets.sh
infrastructure/scripts/trigger-infrastructure.sh

# Service secrets configuration
infrastructure/scripts/service-secrets-config.sh
!infrastructure/scripts/service-secrets-config.sh.example
!infrastructure/scripts/service-secrets-create.sh

# Anything with a -key.json
*-key.json

# Terraform service account keys
*terraform*key*.json
*deployer*key*.json

# Cloud SQL Proxy binary
**cloud-sql-proxy

# Terraform variables
infrastructure/scripts/*/*.tfvars

# Terraform local files
**/.terraform/*
.terraform/
**/.terraform.lock.hcl
infrastructure/environments/dev/.terraform.lock.hcl
infrastructure/environments/stg/.terraform.lock.hcl
infrastructure/environments/prd/.terraform.lock.hcl
*.tfstate
*.tfstate.*
*.tfvars
*.tfvars.json
crash.log
crash.*.log
override.tf
override.tf.json
*_override.tf
*_override.tf.json
.terraformrc
terraform.rc
terraform-*-plan*

# DeepEval
.deepeval/
.deepeval_telemetry.txt
deepeval_telemetry.txt
deepeval_telemetry.json
deepeval_telemetry.jsonl
deepeval_telemetry.jsonl.gz
deepeval_telemetry.jsonl.gz.part

# Exclude .vscode/settings.json
.vscode/*
!.vscode/settings.json

# Exclude Pycharm settings
.idea/

# Playground
playground/*

# K8s files
infrastructure/k8s/manifests/secrets/*
infrastructure/k8s/manifests/configmaps/*
# Exclude example files
!infrastructure/k8s/manifests/secrets/rhesis-secrets.yaml.example
!infrastructure/k8s/manifests/configmaps/rhesis-config.yaml.example
