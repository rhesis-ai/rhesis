from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

import rhesis.backend

# revision identifiers, used by Alembic.
revision: str = "f39342296f96"
down_revision: Union[str, None] = "64fa383326eb"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("endpoint", sa.Column("protocol", sa.String(), nullable=False))
    op.add_column(
        "endpoint", sa.Column("auth", postgresql.JSON(astext_type=sa.Text()), nullable=True)
    )
    op.add_column("endpoint", sa.Column("config_source", sa.String(), nullable=False))
    op.add_column("endpoint", sa.Column("openapi_spec_url", sa.String(), nullable=True))
    op.add_column(
        "endpoint", sa.Column("openapi_spec", postgresql.JSON(astext_type=sa.Text()), nullable=True)
    )
    op.add_column(
        "endpoint",
        sa.Column("llm_suggestions", postgresql.JSON(astext_type=sa.Text()), nullable=True),
    )
    op.add_column("endpoint", sa.Column("method", sa.String(), nullable=True))
    op.add_column("endpoint", sa.Column("endpoint_path", sa.String(), nullable=True))
    op.add_column(
        "endpoint", sa.Column("headers", postgresql.JSON(astext_type=sa.Text()), nullable=True)
    )
    op.add_column(
        "endpoint", sa.Column("query_params", postgresql.JSON(astext_type=sa.Text()), nullable=True)
    )
    op.add_column(
        "endpoint",
        sa.Column("request_body_template", postgresql.JSON(astext_type=sa.Text()), nullable=True),
    )
    op.add_column(
        "endpoint",
        sa.Column("input_mappings", postgresql.JSON(astext_type=sa.Text()), nullable=True),
    )
    op.add_column("endpoint", sa.Column("response_format", sa.String(), nullable=False))
    op.add_column(
        "endpoint",
        sa.Column("response_mappings", postgresql.JSON(astext_type=sa.Text()), nullable=True),
    )
    op.add_column(
        "endpoint",
        sa.Column("validation_rules", postgresql.JSON(astext_type=sa.Text()), nullable=True),
    )
    op.add_column("endpoint", sa.Column("user_id", rhesis.app.models.guid.GUID(), nullable=True))
    op.add_column(
        "endpoint", sa.Column("organization_id", rhesis.app.models.guid.GUID(), nullable=True)
    )
    op.alter_column("endpoint", "url", existing_type=sa.VARCHAR(), nullable=False)
    op.create_foreign_key(None, "endpoint", "user", ["user_id"], ["id"])
    op.create_foreign_key(None, "endpoint", "organization", ["organization_id"], ["id"])
    op.drop_column("endpoint", "provider_name")
    op.drop_column("endpoint", "is_operational")
    op.drop_column("endpoint", "namespace")
    op.drop_column("endpoint", "token")
    op.drop_column("endpoint", "user")
    op.drop_column("endpoint", "llm_name")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "endpoint", sa.Column("llm_name", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column("endpoint", sa.Column("user", sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column("endpoint", sa.Column("token", sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column(
        "endpoint", sa.Column("namespace", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "endpoint", sa.Column("is_operational", sa.BOOLEAN(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "endpoint", sa.Column("provider_name", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.drop_constraint(None, "endpoint", type_="foreignkey")
    op.drop_constraint(None, "endpoint", type_="foreignkey")
    op.alter_column("endpoint", "url", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_column("endpoint", "organization_id")
    op.drop_column("endpoint", "user_id")
    op.drop_column("endpoint", "validation_rules")
    op.drop_column("endpoint", "response_mappings")
    op.drop_column("endpoint", "response_format")
    op.drop_column("endpoint", "input_mappings")
    op.drop_column("endpoint", "request_body_template")
    op.drop_column("endpoint", "query_params")
    op.drop_column("endpoint", "headers")
    op.drop_column("endpoint", "endpoint_path")
    op.drop_column("endpoint", "method")
    op.drop_column("endpoint", "llm_suggestions")
    op.drop_column("endpoint", "openapi_spec")
    op.drop_column("endpoint", "openapi_spec_url")
    op.drop_column("endpoint", "config_source")
    op.drop_column("endpoint", "auth")
    op.drop_column("endpoint", "protocol")
    # ### end Alembic commands ###
