from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

import rhesis.backend

# revision identifiers, used by Alembic.
revision: str = "c607e92437c5"
down_revision: Union[str, None] = "ad25aa0359e9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "test",
        sa.Column("prompt_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("test_type_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("priority", sa.Integer(), nullable=True),
        sa.Column("user_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("assignee_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("owner_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("test_configuration", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("parent_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("topic_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("behavior_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("category_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("status_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("nano_id", sa.String(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["assignee_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["behavior_id"],
            ["behavior.id"],
        ),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["category.id"],
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["test.id"],
        ),
        sa.ForeignKeyConstraint(
            ["prompt_id"],
            ["prompt.id"],
        ),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["status.id"],
        ),
        sa.ForeignKeyConstraint(
            ["test_type_id"],
            ["type_lookup.id"],
        ),
        sa.ForeignKeyConstraint(
            ["topic_id"],
            ["topic.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_test_id"), "test", ["id"], unique=True)
    op.create_table(
        "test_context",
        sa.Column("test_id", rhesis.app.models.guid.GUID(), nullable=False),
        sa.Column("entity_id", rhesis.app.models.guid.GUID(), nullable=False),
        sa.Column("entity_type", sa.String(), nullable=False),
        sa.Column("attributes", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("nano_id", sa.String(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["test_id"],
            ["test.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_test_context_id"), "test_context", ["id"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_test_context_id"), table_name="test_context")
    op.drop_table("test_context")
    op.drop_index(op.f("ix_test_id"), table_name="test")
    op.drop_table("test")
    # ### end Alembic commands ###
