#!/bin/bash
# TEMPLATE ONLY - DO NOT FILL IN WITH REAL VALUES
# Copy this file to a location outside the repository or to a different filename before filling in real values

# Common variables (repository level)
export REGION="europe-west4"
export BILLING_ACCOUNT="your-billing-account-id"
export ORG_ID="your-organization-id"

# Development environment variables
# These will be set in the 'dev' GitHub environment
export DEV_DATABASE_PASSWORD="your-secure-dev-password"
export DEV_BACKEND_IMAGE="europe-west4-docker.pkg.dev/your-project/dev-container-registry/backend:latest"
export DEV_FRONTEND_IMAGE="europe-west4-docker.pkg.dev/your-project/dev-container-registry/frontend:latest"
export DEV_WORKER_IMAGE="europe-west4-docker.pkg.dev/your-project/dev-container-registry/worker:latest"
export DEV_POLYPHEMUS_IMAGE="europe-west4-docker.pkg.dev/your-project/dev-container-registry/polyphemus:latest"
export DEV_CHATBOT_IMAGE="europe-west4-docker.pkg.dev/your-project/dev-container-registry/chatbot:latest"
export DEV_ENABLE_LOAD_BALANCERS="true"
# Optional: Custom domain overrides
# export DEV_BACKEND_DOMAIN="custom-dev-api.domain.com"

# Staging environment variables
# These will be set in the 'stg' GitHub environment
export STG_DATABASE_PASSWORD="your-secure-stg-password"
export STG_BACKEND_IMAGE="europe-west4-docker.pkg.dev/your-project/stg-container-registry/backend:latest"
export STG_FRONTEND_IMAGE="europe-west4-docker.pkg.dev/your-project/stg-container-registry/frontend:latest"
export STG_WORKER_IMAGE="europe-west4-docker.pkg.dev/your-project/stg-container-registry/worker:latest"
export STG_POLYPHEMUS_IMAGE="europe-west4-docker.pkg.dev/your-project/stg-container-registry/polyphemus:latest"
export STG_CHATBOT_IMAGE="europe-west4-docker.pkg.dev/your-project/stg-container-registry/chatbot:latest"
export STG_ENABLE_LOAD_BALANCERS="true"
# Optional: Custom domain overrides
# export STG_BACKEND_DOMAIN="custom-stg-api.domain.com"

# Production environment variables
# These will be set in the 'prd' GitHub environment
export PRD_DATABASE_PASSWORD="your-secure-prd-password"
export PRD_BACKEND_IMAGE="europe-west4-docker.pkg.dev/your-project/prd-container-registry/backend:latest"
export PRD_FRONTEND_IMAGE="europe-west4-docker.pkg.dev/your-project/prd-container-registry/frontend:latest"
export PRD_WORKER_IMAGE="europe-west4-docker.pkg.dev/your-project/prd-container-registry/worker:latest"
export PRD_POLYPHEMUS_IMAGE="europe-west4-docker.pkg.dev/your-project/prd-container-registry/polyphemus:latest"
export PRD_CHATBOT_IMAGE="europe-west4-docker.pkg.dev/your-project/prd-container-registry/chatbot:latest"
export PRD_ENABLE_LOAD_BALANCERS="true"
# Optional: Custom domain overrides
# export PRD_BACKEND_DOMAIN="custom-api.domain.com"

# Get the GitHub repository from the current directory or specify it manually
REPO=$(gh repo view --json nameWithOwner -q .nameWithOwner 2>/dev/null || echo "")

if [[ -z "$REPO" ]]; then
  # If automatic detection fails, specify your repository manually
  REPO="your-org/your-repo"
fi

# Path to your GCP service account key file
KEY_FILE="terraform-deployer-key.json"

# Run the setup script
./infra-secrets-create.sh --repo "$REPO" --key "$KEY_FILE"
