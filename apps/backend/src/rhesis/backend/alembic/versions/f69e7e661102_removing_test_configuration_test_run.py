from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

import rhesis.backend

# revision identifiers, used by Alembic.
revision: str = "f69e7e661102"
down_revision: Union[str, None] = "4822dd94faa7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("test_configuration_test_run")
    op.add_column(
        "test_run", sa.Column("test_configuration_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.create_foreign_key(None, "test_run", "test_configuration", ["test_configuration_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "test_run", type_="foreignkey")
    op.drop_column("test_run", "test_configuration_id")
    op.create_table(
        "test_configuration_test_run",
        sa.Column("test_configuration_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("test_run_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["test_configuration_id"],
            ["test_configuration.id"],
            name="test_configuration_test_run_test_configuration_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["test_run_id"], ["test_run.id"], name="test_configuration_test_run_test_run_id_fkey"
        ),
    )
    # ### end Alembic commands ###
