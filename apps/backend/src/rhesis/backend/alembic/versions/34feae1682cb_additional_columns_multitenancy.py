from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

import rhesis.backend

# revision identifiers, used by Alembic.
revision: str = "34feae1682cb"
down_revision: Union[str, None] = "d89c965e4e8a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "prompt_test_set", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.add_column(
        "prompt_test_set",
        sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True),
    )
    op.create_foreign_key(None, "prompt_test_set", "user", ["user_id"], ["id"])
    op.create_foreign_key(None, "prompt_test_set", "organization", ["organization_id"], ["id"])
    op.add_column(
        "prompt_use_case", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.add_column(
        "prompt_use_case",
        sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True),
    )
    op.create_foreign_key(None, "prompt_use_case", "organization", ["organization_id"], ["id"])
    op.create_foreign_key(None, "prompt_use_case", "user", ["user_id"], ["id"])
    op.add_column(
        "risk_use_case", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.add_column(
        "risk_use_case", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.create_foreign_key(None, "risk_use_case", "user", ["user_id"], ["id"])
    op.create_foreign_key(None, "risk_use_case", "organization", ["organization_id"], ["id"])
    op.add_column("tag", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True))
    op.create_foreign_key(None, "tag", "user", ["user_id"], ["id"])
    op.add_column(
        "tagged_item", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.add_column("tagged_item", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True))
    op.create_foreign_key(None, "tagged_item", "user", ["user_id"], ["id"])
    op.create_foreign_key(None, "tagged_item", "organization", ["organization_id"], ["id"])
    op.add_column(
        "test_test_set", sa.Column("user_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.add_column(
        "test_test_set", sa.Column("organization_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.create_foreign_key(None, "test_test_set", "user", ["user_id"], ["id"])
    op.create_foreign_key(None, "test_test_set", "organization", ["organization_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "test_test_set", type_="foreignkey")
    op.drop_constraint(None, "test_test_set", type_="foreignkey")
    op.drop_column("test_test_set", "organization_id")
    op.drop_column("test_test_set", "user_id")
    op.drop_constraint(None, "tagged_item", type_="foreignkey")
    op.drop_constraint(None, "tagged_item", type_="foreignkey")
    op.drop_column("tagged_item", "user_id")
    op.drop_column("tagged_item", "organization_id")
    op.drop_constraint(None, "tag", type_="foreignkey")
    op.drop_column("tag", "user_id")
    op.drop_constraint(None, "risk_use_case", type_="foreignkey")
    op.drop_constraint(None, "risk_use_case", type_="foreignkey")
    op.drop_column("risk_use_case", "organization_id")
    op.drop_column("risk_use_case", "user_id")
    op.drop_constraint(None, "prompt_use_case", type_="foreignkey")
    op.drop_constraint(None, "prompt_use_case", type_="foreignkey")
    op.drop_column("prompt_use_case", "organization_id")
    op.drop_column("prompt_use_case", "user_id")
    op.drop_constraint(None, "prompt_test_set", type_="foreignkey")
    op.drop_constraint(None, "prompt_test_set", type_="foreignkey")
    op.drop_column("prompt_test_set", "organization_id")
    op.drop_column("prompt_test_set", "user_id")
    # ### end Alembic commands ###
