from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

import rhesis.backend

# revision identifiers, used by Alembic.
revision: str = "73a28a4d02d8"
down_revision: Union[str, None] = "0041b0c2880b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "organization",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("display_name", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("website", sa.String(), nullable=True),
        sa.Column("logo_url", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("address", sa.Text(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("max_users", sa.Integer(), nullable=True),
        sa.Column("subscription_ends_at", sa.DateTime(), nullable=True),
        sa.Column("domain", sa.String(), nullable=True),
        sa.Column("is_domain_verified", sa.Boolean(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("nano_id", sa.String(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_organization_id"), "organization", ["id"], unique=True)
    op.add_column(
        "test_set", sa.Column("organization_id", rhesis.app.models.guid.GUID(), nullable=True)
    )
    op.add_column("test_set", sa.Column("visibility", sa.Text(), nullable=True))
    op.create_foreign_key(None, "test_set", "organization", ["organization_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "test_set", type_="foreignkey")
    op.drop_column("test_set", "visibility")
    op.drop_column("test_set", "organization_id")
    op.drop_index(op.f("ix_organization_id"), table_name="organization")
    op.drop_table("organization")
    # ### end Alembic commands ###
