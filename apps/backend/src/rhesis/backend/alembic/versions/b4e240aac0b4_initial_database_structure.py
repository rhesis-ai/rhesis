from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

import rhesis.backend

# revision identifiers, used by Alembic.
revision: str = "b4e240aac0b4"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "dimension",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_dimension_id"), "dimension", ["id"], unique=True)
    op.create_table(
        "source",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("entity_type", sa.String(), nullable=False),
        sa.Column("url", sa.String(), nullable=True),
        sa.Column("citation", sa.Text(), nullable=True),
        sa.Column(
            "language_code",
            sa.String(length=5),
            nullable=True,
            comment="Language in IETF language tag format",
        ),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_source_id"), "source", ["id"], unique=True)
    op.create_table(
        "status",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("entity_type", sa.String(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_status_id"), "status", ["id"], unique=True)
    op.create_table(
        "user",
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password_hash", sa.String(), nullable=False),
        sa.Column("full_name", sa.String(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_superuser", sa.Boolean(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=True)
    op.create_table(
        "behavior",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("status_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["status.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_behavior_id"), "behavior", ["id"], unique=True)
    op.create_table(
        "category",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("parent_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("entity_type", sa.String(), nullable=True),
        sa.Column("status_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["category.id"],
        ),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["status.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_category_id"), "category", ["id"], unique=True)
    op.create_table(
        "demographic",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("dimension_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["dimension_id"],
            ["dimension.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_demographic_id"), "demographic", ["id"], unique=True)
    op.create_table(
        "endpoint",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("llm_name", sa.String(), nullable=False),
        sa.Column("provider_name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("url", sa.String(), nullable=True),
        sa.Column("namespace", sa.String(), nullable=True),
        sa.Column("token", sa.String(), nullable=True),
        sa.Column("user", sa.String(), nullable=True),
        sa.Column("is_operational", sa.Boolean(), nullable=True),
        sa.Column("status_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["status.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_endpoint_id"), "endpoint", ["id"], unique=True)
    op.create_table(
        "risk",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("parent_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("status_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["risk.id"],
        ),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["status.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_risk_id"), "risk", ["id"], unique=True)
    op.create_table(
        "subscription",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("user_id", rhesis.app.models.guid.GUID(), nullable=False),
        sa.Column(
            "plan", sa.Enum("FREE", "BASIC", "PREMIUM", name="subscriptionplan"), nullable=False
        ),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("status_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("tags", sa.ARRAY(sa.String()), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["status.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_subscription_id"), "subscription", ["id"], unique=True)
    op.create_table(
        "test_run",
        sa.Column("user_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("status_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["status.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_test_run_id"), "test_run", ["id"], unique=True)
    op.create_table(
        "test_set",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("status_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("tags", sa.ARRAY(sa.String()), nullable=True),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["status.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_test_set_id"), "test_set", ["id"], unique=True)
    op.create_table(
        "topic",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("parent_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("entity_type", sa.String(), nullable=True),
        sa.Column("status_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["topic.id"],
        ),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["status.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_topic_id"), "topic", ["id"], unique=True)
    op.create_table(
        "use_case",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("industry", sa.String(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("status_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["status.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_use_case_id"), "use_case", ["id"], unique=True)
    op.create_table(
        "prompt_template",
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("category_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("topic_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("parent_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("language_code", sa.String(), nullable=True),
        sa.Column("is_summary", sa.Boolean(), nullable=True),
        sa.Column("source_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("user_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("status_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("tags", sa.ARRAY(sa.String()), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["category.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["prompt_template.id"],
        ),
        sa.ForeignKeyConstraint(
            ["source_id"],
            ["source.id"],
        ),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["status.id"],
        ),
        sa.ForeignKeyConstraint(
            ["topic_id"],
            ["topic.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_prompt_template_id"), "prompt_template", ["id"], unique=True)
    op.create_table(
        "response_pattern",
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column("response_type", sa.String(), nullable=True),
        sa.Column("behavior_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["behavior_id"],
            ["behavior.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_response_pattern_id"), "response_pattern", ["id"], unique=True)
    op.create_table(
        "risk_use_case",
        sa.Column("risk_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("use_case_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["risk_id"],
            ["risk.id"],
        ),
        sa.ForeignKeyConstraint(
            ["use_case_id"],
            ["use_case.id"],
        ),
    )
    op.create_table(
        "prompt",
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column(
            "demographic_id",
            rhesis.app.models.guid.GUID(),
            nullable=True,
            comment="The demographic for this prompt",
        ),
        sa.Column("category_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("attack_category_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("topic_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column(
            "language_code",
            sa.String(),
            nullable=False,
            comment="Standardized language code with IETF language tag",
        ),
        sa.Column("behavior_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("parent_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("prompt_template_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("expected_response", sa.Text(), nullable=True),
        sa.Column("source_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("user_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("status_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("tags", sa.ARRAY(sa.String()), nullable=True),
        sa.ForeignKeyConstraint(
            ["attack_category_id"],
            ["category.id"],
        ),
        sa.ForeignKeyConstraint(
            ["behavior_id"],
            ["behavior.id"],
        ),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["category.id"],
        ),
        sa.ForeignKeyConstraint(
            ["demographic_id"],
            ["demographic.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["prompt.id"],
        ),
        sa.ForeignKeyConstraint(
            ["prompt_template_id"],
            ["prompt_template.id"],
        ),
        sa.ForeignKeyConstraint(
            ["source_id"],
            ["source.id"],
        ),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["status.id"],
        ),
        sa.ForeignKeyConstraint(
            ["topic_id"],
            ["topic.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_prompt_id"), "prompt", ["id"], unique=True)
    op.create_table(
        "prompt_test_set",
        sa.Column("prompt_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("test_set_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["prompt_id"],
            ["prompt.id"],
        ),
        sa.ForeignKeyConstraint(
            ["test_set_id"],
            ["test_set.id"],
        ),
    )
    op.create_table(
        "prompt_use_case",
        sa.Column("prompt_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("use_case_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["prompt_id"],
            ["prompt.id"],
        ),
        sa.ForeignKeyConstraint(
            ["use_case_id"],
            ["use_case.id"],
        ),
    )
    op.create_table(
        "test_configuration",
        sa.Column("endpoint_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("category_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("topic_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("prompt_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("use_case_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("test_set_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("user_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("status_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["category.id"],
        ),
        sa.ForeignKeyConstraint(
            ["endpoint_id"],
            ["endpoint.id"],
        ),
        sa.ForeignKeyConstraint(
            ["prompt_id"],
            ["prompt.id"],
        ),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["status.id"],
        ),
        sa.ForeignKeyConstraint(
            ["test_set_id"],
            ["test_set.id"],
        ),
        sa.ForeignKeyConstraint(
            ["topic_id"],
            ["topic.id"],
        ),
        sa.ForeignKeyConstraint(
            ["use_case_id"],
            ["use_case.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_test_configuration_id"), "test_configuration", ["id"], unique=True)
    op.create_table(
        "test_configuration_test_run",
        sa.Column("test_configuration_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("test_run_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["test_configuration_id"],
            ["test_configuration.id"],
        ),
        sa.ForeignKeyConstraint(
            ["test_run_id"],
            ["test_run.id"],
        ),
    )
    op.create_table(
        "test_result",
        sa.Column("test_configuration_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("test_run_id", rhesis.app.models.guid.GUID(), nullable=True),
        sa.Column("test_metrics", sa.Text(), nullable=True),
        sa.Column(
            "id",
            rhesis.app.models.guid.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["test_configuration_id"],
            ["test_configuration.id"],
        ),
        sa.ForeignKeyConstraint(
            ["test_run_id"],
            ["test_run.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_test_result_id"), "test_result", ["id"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_test_result_id"), table_name="test_result")
    op.drop_table("test_result")
    op.drop_table("test_configuration_test_run")
    op.drop_index(op.f("ix_test_configuration_id"), table_name="test_configuration")
    op.drop_table("test_configuration")
    op.drop_table("prompt_use_case")
    op.drop_table("prompt_test_set")
    op.drop_index(op.f("ix_prompt_id"), table_name="prompt")
    op.drop_table("prompt")
    op.drop_table("risk_use_case")
    op.drop_index(op.f("ix_response_pattern_id"), table_name="response_pattern")
    op.drop_table("response_pattern")
    op.drop_index(op.f("ix_prompt_template_id"), table_name="prompt_template")
    op.drop_table("prompt_template")
    op.drop_index(op.f("ix_use_case_id"), table_name="use_case")
    op.drop_table("use_case")
    op.drop_index(op.f("ix_topic_id"), table_name="topic")
    op.drop_table("topic")
    op.drop_index(op.f("ix_test_set_id"), table_name="test_set")
    op.drop_table("test_set")
    op.drop_index(op.f("ix_test_run_id"), table_name="test_run")
    op.drop_table("test_run")
    op.drop_index(op.f("ix_subscription_id"), table_name="subscription")
    op.drop_table("subscription")
    op.drop_index(op.f("ix_risk_id"), table_name="risk")
    op.drop_table("risk")
    op.drop_index(op.f("ix_endpoint_id"), table_name="endpoint")
    op.drop_table("endpoint")
    op.drop_index(op.f("ix_demographic_id"), table_name="demographic")
    op.drop_table("demographic")
    op.drop_index(op.f("ix_category_id"), table_name="category")
    op.drop_table("category")
    op.drop_index(op.f("ix_behavior_id"), table_name="behavior")
    op.drop_table("behavior")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_status_id"), table_name="status")
    op.drop_table("status")
    op.drop_index(op.f("ix_source_id"), table_name="source")
    op.drop_table("source")
    op.drop_index(op.f("ix_dimension_id"), table_name="dimension")
    op.drop_table("dimension")
    # ### end Alembic commands ###
